version: '3.8'
services:
  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:latest
    ports:
      - 15673:15672
      - 5673:5672
    restart: always
    volumes:
      - ./data:/var/lib/rabbitmq

  database:
    image: postgres:latest
    container_name: postgres-container
    restart: unless-stopped
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: Kyvinept99
    volumes:
      - database:/var/lib/postgresql/data
    ports:
      - 5432:5432

  redis:
    image: redis:latest
    hostname: redis
    ports:
      - '6379:6379'
    command: redis-server

  minio:
    image: minio/minio:latest
    container_name: minio-container
    command: server /data --console-address ":9001" 
    ports:
     - "9000:9000"
     - "9001:9001"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    volumes:
      - minio_data:/data

  # api_gateway:
  #   build:
  #     context: ./ApiGateway
  #   ports:
  #     - 3002:3002
  #   restart: always
  #   container_name: api-gateway
  #   hostname: api-gateway

  user_service:
    build: ./UserService
    ports:
      - "3003:3003"
    restart: unless-stopped
    image: user-service
    container_name: user-service
    depends_on:
      - rabbitmq
    links:
      - rabbitmq

  media_service:
    build: ./MediaService
    image: media-service
    container_name: media-service
    restart: unless-stopped
    ports:
      - "3001:3001"
    depends_on:
      - minio

  # delivery_app:
  #   build: 
  #     context: ./DeliveryApp
  #   image: delivery-app
  #   container_name: delivery-app
  #   restart: unless-stopped
  #   ports:
  #     - "3000:3000"
  #   depends_on:
  #     - redis
  #     - media_service
      # - api_gateway

volumes:
  database:
  minio_data: